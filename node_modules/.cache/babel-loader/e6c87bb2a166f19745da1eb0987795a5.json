{"ast":null,"code":"impor;\nimport ApiContext from '../apiContext/ApiContext';\nconst AuthService = {\n  postLogin(mobile_number, password) {\n    return fetch('http://localhost:8000/api/login', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        mobile_number,\n        password\n      })\n    }).then(res => {\n      return !res.ok ? res.json().then(e => Promise.reject(e)) : res.json();\n    }).then(resData => {\n      TokenService.saveAuthToken(resData.authToken);\n    });\n  },\n\n  registerUser({\n    first_name,\n    last_name,\n    email,\n    password,\n    home_number,\n    mobile_number,\n    address,\n    city,\n    state_region,\n    zipcode,\n    best_days_reached,\n    best_time_reached,\n    message,\n    id\n  }) {\n    return fetch('http://localhost:8000/api/register', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        first_name,\n        last_name,\n        email,\n        password,\n        home_number,\n        mobile_number,\n        address,\n        city,\n        state_region,\n        zipcode,\n        best_days_reached,\n        best_time_reached,\n        message,\n        id\n      })\n    }).then(res => {\n      if (!res.ok) {\n        return res.json().then(e => Promise.reject(e));\n      }\n\n      return res.json();\n    });\n  },\n\n  getUser() {\n    return fetch('http://localhost:8000/api/jcarcamo').then(res => res.json()).then(resData => resData);\n  }\n\n};\nexport default AuthService;","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\services\\AuthService.js"],"names":["impor","ApiContext","AuthService","postLogin","mobile_number","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","resData","TokenService","saveAuthToken","authToken","registerUser","first_name","last_name","email","home_number","address","city","state_region","zipcode","best_days_reached","best_time_reached","message","id","getUser"],"mappings":"AAAAA,KAAK;AACL,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,SAAS,CAACC,aAAD,EAAgBC,QAAhB,EAAyB;AAC9B,WAAOC,KAAK,CAAC,iCAAD,EAAoC;AAC5CC,MAAAA,MAAM,EAAE,MADoC;AAE5CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFmC;AAK5CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,QAAAA,aAAD;AAAgBC,QAAAA;AAAhB,OAAf;AALsC,KAApC,CAAL,CAONO,IAPM,CAOAC,GAAG,IAAI;AACV,aAAO,CAACA,GAAG,CAACC,EAAL,GAAUD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAArB,CAAV,GAAoDH,GAAG,CAACE,IAAJ,EAA3D;AACH,KATM,EAUNH,IAVM,CAUAO,OAAO,IAAI;AAEdC,MAAAA,YAAY,CAACC,aAAb,CAA2BF,OAAO,CAACG,SAAnC;AAEH,KAdM,CAAP;AAeH,GAjBe;;AAkBhBC,EAAAA,YAAY,CAAC;AAACC,IAAAA,UAAD;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,KAAxB;AAA+BrB,IAAAA,QAA/B;AAAyCsB,IAAAA,WAAzC;AAAuDvB,IAAAA,aAAvD;AAAsEwB,IAAAA,OAAtE;AAA+EC,IAAAA,IAA/E;AAAqFC,IAAAA,YAArF;AAAmGC,IAAAA,OAAnG;AAA4GC,IAAAA,iBAA5G;AAA+HC,IAAAA,iBAA/H;AAAkJC,IAAAA,OAAlJ;AAA2JC,IAAAA;AAA3J,GAAD,EAAgK;AACxK,WAAO7B,KAAK,CAAC,oCAAD,EAAuC;AAC/CC,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFsC;AAK/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACa,QAAAA,UAAD;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,KAAxB;AAA+BrB,QAAAA,QAA/B;AAAyCsB,QAAAA,WAAzC;AAAuDvB,QAAAA,aAAvD;AAAsEwB,QAAAA,OAAtE;AAA+EC,QAAAA,IAA/E;AAAqFC,QAAAA,YAArF;AAAmGC,QAAAA,OAAnG;AAA4GC,QAAAA,iBAA5G;AAA+HC,QAAAA,iBAA/H;AAAkJC,QAAAA,OAAlJ;AAA2JC,QAAAA;AAA3J,OAAf;AALyC,KAAvC,CAAL,CAONvB,IAPM,CAOAC,GAAG,IAAI;AACV,UAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,eAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAArB,CAAP;AACH;;AACD,aAAOH,GAAG,CAACE,IAAJ,EAAP;AACH,KAZM,CAAP;AAaH,GAhCe;;AAkCpBqB,EAAAA,OAAO,GAAE;AACL,WAAO9B,KAAK,CAAC,oCAAD,CAAL,CAA8CM,IAA9C,CAAoDC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EAA3D,EAAuEH,IAAvE,CAA6EO,OAAO,IAAIA,OAAxF,CAAP;AACH;;AApCmB,CAApB;AAyCA,eAAejB,WAAf","sourcesContent":["impor\r\nimport ApiContext from '../apiContext/ApiContext';\r\n\r\nconst AuthService = {\r\n    postLogin(mobile_number, password){\r\n        return fetch('http://localhost:8000/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({mobile_number, password})\r\n        })\r\n        .then( res => {\r\n            return !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()\r\n        })\r\n        .then( resData => {\r\n    \r\n            TokenService.saveAuthToken(resData.authToken);\r\n            \r\n        })\r\n    },\r\n    registerUser({first_name, last_name, email, password, home_number,  mobile_number, address, city, state_region, zipcode, best_days_reached, best_time_reached, message, id}){\r\n        return fetch('http://localhost:8000/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({first_name, last_name, email, password, home_number,  mobile_number, address, city, state_region, zipcode, best_days_reached, best_time_reached, message, id})\r\n        })\r\n        .then( res => {\r\n            if(!res.ok){\r\n                return res.json().then(e => Promise.reject(e))\r\n            }\r\n            return res.json();\r\n        })\r\n    }\r\n,\r\ngetUser(){\r\n    return fetch('http://localhost:8000/api/jcarcamo', ).then( res => res.json()).then( resData => resData);\r\n}\r\n}\r\n\r\n\r\n\r\nexport default AuthService;"]},"metadata":{},"sourceType":"module"}