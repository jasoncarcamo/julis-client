{"ast":null,"code":"import React from 'react';\nimport tokenService from '../../../services/TokenService';\nimport queryString from 'query-string';\nexport default class EditService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const serviceId = queryString.parse(this.props.location.search);\n    console.log(serviceId);\n    fetch(\"http://localhost:8000/user/service\", {\n      headers: {\n        'content-type': 'application/json',\n        'authorization': \"bearer \".concat(tokenService.getAuthToken())\n      }\n    }).then(res => res.json()).then(resData => {});\n  }\n\n  render() {\n    console.log('Hello');\n    return 'Hello';\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\components\\user\\edit-service\\EditService.js"],"names":["React","tokenService","queryString","EditService","Component","constructor","props","state","componentDidMount","serviceId","parse","location","search","console","log","fetch","headers","getAuthToken","then","res","json","resData","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAGA,eAAe,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,SAAS,GAAGP,WAAW,CAACQ,KAAZ,CAAkB,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,MAAtC,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACAM,IAAAA,KAAK,uCAAuC;AACxCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,0CAA2Bf,YAAY,CAACgB,YAAb,EAA3B;AAFK;AAD+B,KAAvC,CAAL,CAMCC,IAND,CAMOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANd,EAOCF,IAPD,CAOMG,OAAO,IAAI,CAEhB,CATD;AAUH;;AACDC,EAAAA,MAAM,GAAE;AACJT,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WACI,OADJ;AAGH;;AA1BmD","sourcesContent":["import React from 'react';\r\nimport tokenService from '../../../services/TokenService';\r\nimport queryString from 'query-string';\r\n\r\n\r\nexport default class EditService extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const serviceId = queryString.parse(this.props.location.search);\r\n        console.log(serviceId)\r\n        fetch(`http://localhost:8000/user/service`, {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `bearer ${tokenService.getAuthToken()}`\r\n            }\r\n        })\r\n        .then( res => res.json())\r\n        .then(resData => {\r\n            \r\n        })\r\n    }\r\n    render(){\r\n        console.log('Hello')\r\n        return (\r\n            'Hello'\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}