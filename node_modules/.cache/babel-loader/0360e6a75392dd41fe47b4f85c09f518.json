{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\GitHub\\\\clean-com\\\\src\\\\components\\\\user\\\\User.js\";\nimport React from 'react';\nimport ApiContext from '../../apiContext/ApiContext';\nimport UserService from '../../services/UserService';\nimport RequestService from './request-service/RequestService';\nimport TokenService from '../../services/TokenService';\nimport { Route, Link } from 'react-router-dom';\nimport ServiceHistory from './service-history/ServiceHistory';\nimport EditService from './edit-service/EditService';\nimport './';\nexport default class User extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRefresh = e => {\n      this.props.history.push('/user/services');\n    };\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      best_days_reach: '',\n      best_time_reach: '',\n      email: '',\n      home_number: '',\n      mobile_number: '',\n      date_created: '',\n      date_modified: '',\n      address: '',\n      city: '',\n      state_region: '',\n      zipcode: '',\n      message: '',\n      verified: ''\n    };\n  }\n\n  componentDidMount() {\n    if (UserService.getId()) {\n      fetch(\"http://localhost:8000/user/\", {\n        headers: {\n          'authorization': \"bearer \".concat(TokenService.getAuthToken())\n        }\n      }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()).then(resData => {\n        this.setState({\n          first_name: resData.first_name,\n          last_name: resData.last_name,\n          email: resData.email,\n          home_number: resData.home_number,\n          mobile_number: resData.mobile_number,\n          date_created: resData.date_created,\n          date_modified: resData.date_modified,\n          address: resData.address,\n          city: resData.city,\n          state_region: resData.state_region,\n          zipcode: resData.zipcode,\n          verified: resData.verified\n        });\n      });\n    } else {\n      UserService.clearId();\n      TokenService.clearAuthToken();\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/user/services\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Service details\"), React.createElement(Link, {\n      to: \"/user/newservice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Arrange Clean Up\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Hello \", this.state.first_name), React.createElement(Route, {\n      exact: true,\n      path: \"/user/services\",\n      component: props => React.createElement(ServiceHistory, Object.assign({}, props, {\n        refresh: this.handleRefresh,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/user/newservice\",\n      render: props => React.createElement(RequestService, Object.assign({}, props, {\n        user: UserService.getId(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/user/editservice\",\n      component: EditService,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\nUser.context = ApiContext;","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\components\\user\\User.js"],"names":["React","ApiContext","UserService","RequestService","TokenService","Route","Link","ServiceHistory","EditService","User","Component","constructor","props","handleRefresh","e","history","push","state","first_name","last_name","best_days_reach","best_time_reach","email","home_number","mobile_number","date_created","date_modified","address","city","state_region","zipcode","message","verified","componentDidMount","getId","fetch","headers","getAuthToken","then","res","ok","json","Promise","reject","resData","setState","clearId","clearAuthToken","render","context"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAAQC,KAAR,EAAeC,IAAf,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,IAAP;AAGA,eAAe,MAAMC,IAAN,SAAmBT,KAAK,CAACU,SAAzB,CAAkC;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA2DlBC,aA3DkB,GA2DDC,CAAD,IAAM;AAClB,WAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,gBAAxB;AACH,KA7DiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTC,MAAAA,eAAe,EAAE,EAHR;AAITC,MAAAA,eAAe,EAAE,EAJR;AAKTC,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,WAAW,EAAE,EANJ;AAOTC,MAAAA,aAAa,EAAE,EAPN;AAQTC,MAAAA,YAAY,EAAE,EARL;AASTC,MAAAA,aAAa,EAAE,EATN;AAUTC,MAAAA,OAAO,EAAE,EAVA;AAWTC,MAAAA,IAAI,EAAE,EAXG;AAYTC,MAAAA,YAAY,EAAE,EAZL;AAaTC,MAAAA,OAAO,EAAE,EAbA;AAcTC,MAAAA,OAAO,EAAE,EAdA;AAeTC,MAAAA,QAAQ,EAAE;AAfD,KAAb;AAiBH;;AAIDC,EAAAA,iBAAiB,GAAE;AAEf,QAAG/B,WAAW,CAACgC,KAAZ,EAAH,EAAuB;AAEnBC,MAAAA,KAAK,gCAAgC;AACjCC,QAAAA,OAAO,EAAE;AACL,4CAA2BhC,YAAY,CAACiC,YAAb,EAA3B;AADK;AADwB,OAAhC,CAAL,CAKKC,IALL,CAKWC,GAAG,IAAK,CAACA,GAAG,CAACC,EAAN,GAAYD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBxB,CAAC,IAAI4B,OAAO,CAACC,MAAR,CAAe7B,CAAf,CAArB,CAAZ,GAAqDyB,GAAG,CAACE,IAAJ,EALvE,EAMSH,IANT,CAMeM,OAAO,IAAI;AAEd,aAAKC,QAAL,CAAc;AAEV3B,UAAAA,UAAU,EAAE0B,OAAO,CAAC1B,UAFV;AAGVC,UAAAA,SAAS,EAAEyB,OAAO,CAACzB,SAHT;AAIVG,UAAAA,KAAK,EAAEsB,OAAO,CAACtB,KAJL;AAKVC,UAAAA,WAAW,EAAEqB,OAAO,CAACrB,WALX;AAMVC,UAAAA,aAAa,EAAEoB,OAAO,CAACpB,aANb;AAOVC,UAAAA,YAAY,EAAEmB,OAAO,CAACnB,YAPZ;AAQVC,UAAAA,aAAa,EAAEkB,OAAO,CAAClB,aARb;AASVC,UAAAA,OAAO,EAAEiB,OAAO,CAACjB,OATP;AAUVC,UAAAA,IAAI,EAAEgB,OAAO,CAAChB,IAVJ;AAWVC,UAAAA,YAAY,EAAEe,OAAO,CAACf,YAXZ;AAYVC,UAAAA,OAAO,EAAEc,OAAO,CAACd,OAZP;AAaVE,UAAAA,QAAQ,EAAEY,OAAO,CAACZ;AAbR,SAAd;AAgBH,OAxBT;AAyBH,KA3BD,MA2BM;AACF9B,MAAAA,WAAW,CAAC4C,OAAZ;AACA1C,MAAAA,YAAY,CAAC2C,cAAb;AACA,WAAKnC,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AAODgC,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAK/B,KAAL,CAAWC,UAAtB,CAJJ,EAMI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,kBAAjB;AAAqC,MAAA,SAAS,EAAEN,KAAK,IAAI,oBAAC,cAAD,oBAAmBA,KAAnB;AAA0B,QAAA,OAAO,EAAE,KAAKC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,oBAAjB;AAAuC,MAAA,MAAM,EAAED,KAAK,IAAI,oBAAC,cAAD,oBAAoBA,KAApB;AAA2B,QAAA,IAAI,EAAEV,WAAW,CAACgC,KAAZ,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,mBAAZ;AAAgC,MAAA,SAAS,EAAE1B,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAaH;;AAhF4C;AAA5BC,I,CAsBVwC,O,GAAUhD,U","sourcesContent":["import React from 'react';\r\nimport ApiContext from '../../apiContext/ApiContext';\r\nimport UserService from '../../services/UserService';\r\nimport RequestService from './request-service/RequestService';\r\nimport TokenService from '../../services/TokenService';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport ServiceHistory from './service-history/ServiceHistory';\r\nimport EditService from './edit-service/EditService';\r\nimport './'\r\n\r\n\r\nexport default class User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            first_name: '', \r\n            last_name: '', \r\n            best_days_reach: '',\r\n            best_time_reach: '',\r\n            email: '', \r\n            home_number: '',\r\n            mobile_number: '',\r\n            date_created: '',\r\n            date_modified: '',\r\n            address: '',\r\n            city: '',\r\n            state_region: '',\r\n            zipcode: '',\r\n            message: '',\r\n            verified: ''\r\n        }\r\n    }\r\n\r\n    static context = ApiContext;\r\n\r\n    componentDidMount(){\r\n        \r\n        if(UserService.getId()){\r\n            \r\n            fetch(`http://localhost:8000/user/`, {\r\n                headers: {\r\n                    'authorization': `bearer ${TokenService.getAuthToken()}`\r\n                }\r\n            })\r\n                .then( res => (!res.ok) ? res.json().then(e => Promise.reject(e)): res.json())\r\n                    .then( resData => {\r\n                        \r\n                        this.setState({\r\n\r\n                            first_name: resData.first_name,\r\n                            last_name: resData.last_name,\r\n                            email: resData.email, \r\n                            home_number: resData.home_number,\r\n                            mobile_number: resData.mobile_number,\r\n                            date_created: resData.date_created,\r\n                            date_modified: resData.date_modified,\r\n                            address: resData.address,\r\n                            city: resData.city,\r\n                            state_region: resData.state_region,\r\n                            zipcode: resData.zipcode,\r\n                            verified: resData.verified                            \r\n                        })\r\n                    \r\n                    });\r\n        } else{\r\n            UserService.clearId();\r\n            TokenService.clearAuthToken();\r\n            this.props.history.push('/login')\r\n        }\r\n    }\r\n    \r\n    handleRefresh = (e)=> {\r\n        this.props.history.push('/user/services')\r\n    }\r\n\r\n    \r\n    render(){\r\n        \r\n        return (\r\n            <section>\r\n                <Link to={`/user/services`}>Service details</Link>\r\n                <Link to={`/user/newservice`}>Arrange Clean Up</Link>\r\n\r\n                <h1>Hello {this.state.first_name}</h1>\r\n\r\n                <Route exact path={`/user/services`} component={props => <ServiceHistory{...props} refresh={this.handleRefresh}/>}></Route>                \r\n                <Route exact path={`/user/newservice`} render={props => <RequestService {...props} user={UserService.getId()}></RequestService> }></Route>\r\n                <Route path=\"/user/editservice\" component={EditService}></Route>\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}