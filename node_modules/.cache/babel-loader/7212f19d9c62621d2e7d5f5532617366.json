{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\GitHub\\\\julis-cleaning\\\\src\\\\components\\\\registration\\\\Registration.js\";\nimport React from 'react';\nimport AuthService from '../../services/AuthService';\nimport uuid4 from 'uuid/v4';\nimport './registration.css';\nexport default class Registration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFirstName = e => {\n      this.setState({\n        first_name: e.target.value\n      });\n    };\n\n    this.handleLastName = e => {\n      this.setState({\n        last_name: e.target.value\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handlePasswordConfirmation = e => {\n      this.setState({\n        passConfirm: e.target.value\n      });\n    };\n\n    this.handlePasswordLength = e => {\n      if (e.length) {\n        if (e.length > 3 && e.length < 8) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"Password is too short, must be 8 characters long\");\n        }\n      }\n\n      return '';\n    };\n\n    this.handlePasswordMatch = () => {\n      if (this.state.password.length > 5 && this.state.passConfirm.length > 5 && this.state.password === this.state.passConfirm) {\n        return React.createElement(\"span\", {\n          className: \"correct_password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Passwords match is \");\n      } else {\n        return React.createElement(\"span\", {\n          className: \"incorrect_password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Passwords do not match.\");\n      }\n    };\n\n    this.handleHomeNumber = e => {\n      this.setState({\n        home_number: e.target.value\n      });\n    };\n\n    this.handleMobileNumber = e => {\n      this.setState({\n        mobile_number: e.target.value\n      });\n    };\n\n    this.handleAddress = e => {\n      this.setState({\n        address: e.target.value\n      });\n    };\n\n    this.handleCity = e => {\n      this.setState({\n        city: e.target.value\n      });\n    };\n\n    this.handleStateRegion = e => {\n      this.setState({\n        state_region: e.target.value\n      });\n    };\n\n    this.handleZipCode = e => {\n      this.setState({\n        zipcode: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let _this$state = this.state,\n          first_name = _this$state.first_name,\n          last_name = _this$state.last_name,\n          email = _this$state.email,\n          password = _this$state.password,\n          home_number = _this$state.home_number,\n          mobile_number = _this$state.mobile_number,\n          address = _this$state.address,\n          city = _this$state.city,\n          state_region = _this$state.state_region,\n          zipcode = _this$state.zipcode;\n      const profile_id = uuid4();\n      let newUser = {\n        first_name,\n        last_name,\n        email,\n        password,\n        home_number,\n        mobile_number,\n        address,\n        city,\n        state_region,\n        zipcode,\n        id: profile_id + last_name\n      };\n      AuthService.registerUser(newUser).then(res => {\n        if (res) {\n          this.props.history.push(\"/login\");\n        }\n      }).catch(error => this.setState({\n        error: error.error\n      }));\n    };\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n      passConfirm: '',\n      home_number: '',\n      mobile_number: '',\n      address: '',\n      city: '',\n      state_region: '',\n      zipcode: '',\n      error: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"reg_section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      id: \"reg_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"reg_first_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"* First Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reg_first_name\",\n      onChange: this.handleFirstName,\n      value: this.state.first_name,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reg_last_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"* Last Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reg_last_name\",\n      onChange: this.handleLastName,\n      value: this.state.last_name,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reg_email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"* Email:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reg_email\",\n      onChange: this.handleEmail,\n      value: this.state.email,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reg_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"* Enter a password: \", React.createElement(\"span\", {\n      id: \"password_requirements\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Password must greater than 8 characters, contain one upper case, lower case, number and special character\")), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"reg_password\",\n      onChange: this.handlePassword,\n      value: this.state.password,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), this.state.password.length ? this.handlePasswordLength(this.state.password) : '', React.createElement(\"label\", {\n      htmlFor: \"re_password_confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"* Retype password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      onChange: this.handlePasswordConfirmation,\n      value: this.state.passConfirm,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), this.state.passConfirm.length < 8 ? '' : this.handlePasswordMatch(), React.createElement(\"label\", {\n      htmlFor: \"reg_home_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Home Number:\"), React.createElement(\"input\", {\n      text: \"text\",\n      id: \"reg_phone_number\",\n      onChange: this.handleHomeNumber,\n      value: this.state.home_number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reg_mobile_number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"* Mobile Number:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reg_mobile_number\",\n      onChange: this.handleMobileNumber,\n      value: this.state.mobile_number,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reg_address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"* Address:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reg_address\",\n      onChange: this.handleAddress,\n      value: this.state.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reg_city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"* City:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reg_city\",\n      onChange: this.handleCity,\n      value: this.state.city,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reg_state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"* State Region:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reg_state\",\n      onChange: this.handleStateRegion,\n      value: this.state.state_region,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"reg_zipcode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"* Zip Code\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"reg_zipcode\",\n      onChange: this.handleZipCode,\n      value: this.state.zipcode,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"reg_submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Sign me up\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\julis-cleaning\\src\\components\\registration\\Registration.js"],"names":["React","AuthService","uuid4","Registration","Component","constructor","props","handleFirstName","e","setState","first_name","target","value","handleLastName","last_name","handleEmail","email","handlePassword","password","handlePasswordConfirmation","passConfirm","handlePasswordLength","length","handlePasswordMatch","state","handleHomeNumber","home_number","handleMobileNumber","mobile_number","handleAddress","address","handleCity","city","handleStateRegion","state_region","handleZipCode","zipcode","handleSubmit","preventDefault","profile_id","newUser","id","registerUser","then","res","history","push","catch","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport uuid4 from 'uuid/v4';\r\nimport './registration.css';\r\n\r\n\r\nexport default class Registration extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           first_name: '',\r\n           last_name: '',\r\n           email: '' ,\r\n           password: '',\r\n           passConfirm: '',\r\n           home_number: '',\r\n           mobile_number: '',\r\n           address: '',\r\n           city: '',\r\n           state_region: '',\r\n           zipcode: '',\r\n           error: '' \r\n        }\r\n    }\r\n\r\n\r\n    \r\n    handleFirstName = (e)=>{\r\n        this.setState({ first_name: e.target.value});\r\n    }\r\n\r\n    handleLastName = (e)=>{\r\n        this.setState({ last_name: e.target.value});\r\n    }\r\n\r\n    handleEmail = (e)=>{\r\n        this.setState({ email: e.target.value});\r\n    }\r\n\r\n    handlePassword = (e)=>{\r\n        this.setState({password: e.target.value});\r\n    }\r\n    \r\n    handlePasswordConfirmation = (e)=>{\r\n        this.setState({ passConfirm: e.target.value})\r\n    }\r\n\r\n    handlePasswordLength = (e)=>{\r\n        if(e.length){\r\n            if(e.length > 3 && e.length < 8){\r\n                return <span>Password is too short, must be 8 characters long</span>\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    handlePasswordMatch = ()=>{\r\n        \r\n        if(this.state.password.length > 5 && this.state.passConfirm.length > 5 && this.state.password === this.state.passConfirm){\r\n            return (<span className=\"correct_password\">Passwords match is </span>);\r\n        } else{\r\n            return (<span className=\"incorrect_password\">Passwords do not match.</span>);\r\n        }\r\n    \r\n    }\r\n\r\n    handleHomeNumber =(e)=>{\r\n        this.setState({ home_number: e.target.value})\r\n    }\r\n\r\n    handleMobileNumber = (e)=>{\r\n        this.setState({ mobile_number: e.target.value});\r\n    }\r\n\r\n    handleAddress = (e)=>{\r\n        this.setState({ address: e.target.value});\r\n    }\r\n\r\n    handleCity = (e)=>{\r\n        this.setState({ city: e.target.value});\r\n    }\r\n\r\n    handleStateRegion = (e)=>{\r\n        this.setState({ state_region: e.target.value});\r\n    } \r\n\r\n    handleZipCode = (e)=>{\r\n        this.setState({ zipcode: e.target.value});\r\n    }\r\n\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n        let {first_name, last_name, email, password, home_number, mobile_number, address, city, state_region, zipcode} = this.state;\r\n\r\n        const profile_id = uuid4();\r\n\r\n        let newUser = {\r\n            first_name,\r\n            last_name,\r\n            email,\r\n            password,\r\n            home_number,\r\n            mobile_number,\r\n            address,\r\n            city,\r\n            state_region,\r\n            zipcode,\r\n            id: profile_id + last_name\r\n        }\r\n\r\n        \r\n        AuthService.registerUser(newUser).then(res => {\r\n            if(res){\r\n                this.props.history.push(`/login`)\r\n            }\r\n        })\r\n        .catch(error => this.setState({ error: error.error}));\r\n\r\n    }\r\n\r\n    render(){\r\n    \r\n        return (\r\n            <section id=\"reg_section\">\r\n                <form onSubmit={this.handleSubmit} id=\"reg_form\">\r\n                    <fieldset>\r\n                    \r\n\r\n                        <label htmlFor=\"reg_first_name\">* First Name:</label>\r\n                        <input type=\"text\" id=\"reg_first_name\" onChange={this.handleFirstName} value={this.state.first_name} required/>\r\n\r\n                        <label htmlFor=\"reg_last_name\">* Last Name:</label>\r\n                        <input type=\"text\" id=\"reg_last_name\" onChange={this.handleLastName} value={this.state.last_name} required/>\r\n\r\n\r\n                        <label htmlFor=\"reg_email\">* Email:</label>\r\n                        <input type=\"text\" id=\"reg_email\" onChange={this.handleEmail} value={this.state.email} required/>\r\n\r\n                        <label htmlFor=\"reg_password\">* Enter a password: <span id=\"password_requirements\">Password must greater than 8 characters, contain one upper case, lower case, number and special character</span></label>\r\n                        <input type=\"password\" id=\"reg_password\" onChange={this.handlePassword} value={this.state.password} required/>\r\n                        {this.state.password.length ? this.handlePasswordLength(this.state.password):  ''}\r\n                        \r\n                        <label htmlFor=\"re_password_confirm\">* Retype password:\r\n                        </label>\r\n                        <input type=\"password\" onChange={this.handlePasswordConfirmation} value={this.state.passConfirm} required></input>     \r\n                        {this.state.passConfirm.length < 8 ? '' : this.handlePasswordMatch()}\r\n\r\n                        <label htmlFor=\"reg_home_number\">Home Number:</label>\r\n                        <input text=\"text\" id=\"reg_phone_number\" onChange={this.handleHomeNumber} value={this.state.home_number}></input>\r\n\r\n                        <label htmlFor=\"reg_mobile_number\">* Mobile Number:</label>\r\n                        <input type=\"text\" id=\"reg_mobile_number\" onChange={this.handleMobileNumber} value={this.state.mobile_number} required/> \r\n\r\n                        <label htmlFor=\"reg_address\">* Address:</label>\r\n                        <input type=\"text\" id=\"reg_address\" onChange={this.handleAddress} value={this.state.address}/>\r\n\r\n                        <label htmlFor=\"reg_city\">* City:</label>\r\n                        <input type=\"text\" id=\"reg_city\" onChange={this.handleCity} value={this.state.city} required/>\r\n\r\n                        <label htmlFor=\"reg_state\">* State Region:</label>\r\n                        <input type=\"text\" id=\"reg_state\" onChange={this.handleStateRegion} value={this.state.state_region} required/>\r\n\r\n                        <label htmlFor=\"reg_zipcode\">* Zip Code</label>\r\n                        <input type=\"text\" id=\"reg_zipcode\" onChange={this.handleZipCode} value={this.state.zipcode} required/>\r\n\r\n                        <button type=\"submit\" id=\"reg_submit\">Sign me up</button>\r\n                    </fieldset>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}