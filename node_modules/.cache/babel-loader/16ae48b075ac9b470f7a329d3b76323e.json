{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\GitHub\\\\clean-com\\\\src\\\\components\\\\login\\\\LogIn.js\";\nimport React from 'react';\nimport AuthService from '../../services/AuthService';\nimport TokenService from '../../services/TokenService';\nimport ApiContext from '../../apiContext/ApiContext';\nimport UserService from '../../services/UserService';\nimport { tsImportEqualsDeclaration } from '@babel/types';\nexport default class LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNumber = e => {\n      this.setState({\n        mobile_number: e.target.value\n      });\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            mobile_number = _this$state.mobile_number,\n            password = _this$state.password;\n      AuthService.postLogin(mobile_number, password).then(resData => {\n        console.log(resData);\n\n        if (resData.verified) {\n          TokenService.saveAuthToken(resData.authToken);\n          UserService.saveId(resData.id);\n          this.props.history.push(\"/user/\".concat(resData.id));\n        } else {\n          this.props.history.push(\"api/resend?id=\".concat(resData.id));\n        }\n      });\n    };\n\n    this.handleUser = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      mobile_number: '',\n      password: ''\n    };\n  }\n\n  componentDidMount() {\n    if (UserService.getId() !== this.props.match.params.id) {}\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"label\", {\n      htmlFor: \"user_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Mobile Number:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"user_name\",\n      onChange: this.handleNumber,\n      value: this.state.mobile_number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      id: \"password\",\n      type: \"password\",\n      onChange: this.handlePassword,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Log In\")));\n  }\n\n}\nLogIn.contextType = ApiContext;","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\components\\login\\LogIn.js"],"names":["React","AuthService","TokenService","ApiContext","UserService","tsImportEqualsDeclaration","LogIn","Component","constructor","props","handleNumber","e","setState","mobile_number","target","value","handlePassword","password","handleSubmit","preventDefault","state","postLogin","then","resData","console","log","verified","saveAuthToken","authToken","saveId","id","history","push","handleUser","componentDidMount","getId","match","params","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,yBAAT,QAA0C,cAA1C;AAEA,eAAe,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAgBlBC,YAhBkB,GAgBFC,CAAD,IAAK;AAChB,WAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAzB,OAAd;AACH,KAlBiB;;AAAA,SAoBlBC,cApBkB,GAoBAL,CAAD,IAAK;AAClB,WAAKC,QAAL,CAAc;AAAEK,QAAAA,QAAQ,EAAEN,CAAC,CAACG,MAAF,CAASC;AAArB,OAAd;AACH,KAtBiB;;AAAA,SAwBlBG,YAxBkB,GAwBFP,CAAD,IAAK;AAChBA,MAAAA,CAAC,CAACQ,cAAF;AADgB,0BAEkB,KAAKC,KAFvB;AAAA,YAETP,aAFS,eAETA,aAFS;AAAA,YAEMI,QAFN,eAEMA,QAFN;AAIhBhB,MAAAA,WAAW,CAACoB,SAAZ,CAAsBR,aAAtB,EAAqCI,QAArC,EAA+CK,IAA/C,CAAqDC,OAAO,IAAI;AAC5DC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,YAAGA,OAAO,CAACG,QAAX,EAAoB;AAChBxB,UAAAA,YAAY,CAACyB,aAAb,CAA2BJ,OAAO,CAACK,SAAnC;AACAxB,UAAAA,WAAW,CAACyB,MAAZ,CAAmBN,OAAO,CAACO,EAA3B;AACA,eAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,iBAAiCT,OAAO,CAACO,EAAzC;AACH,SAJD,MAIM;AACF,eAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,yBAAyCT,OAAO,CAACO,EAAjD;AACH;AAEJ,OAVD;AAYH,KAxCiB;;AAAA,SA0ClBG,UA1CkB,GA0CJtB,CAAD,IAAK;AACdA,MAAAA,CAAC,CAACQ,cAAF;AAEH,KA7CiB;;AAEd,SAAKC,KAAL,GAAa;AACTP,MAAAA,aAAa,EAAE,EADN;AAETI,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAIDiB,EAAAA,iBAAiB,GAAE;AACf,QAAG9B,WAAW,CAAC+B,KAAZ,OAAwB,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBC,MAAjB,CAAwBP,EAAnD,EAAsD,CAErD;AACJ;;AAiCDQ,EAAAA,MAAM,GAAE;AACJ,WAEI;AAAM,MAAA,QAAQ,EAAE,KAAKpB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAE,KAAKR,YAAjD;AAA+D,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWP,aAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAKI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAqB,MAAA,IAAI,EAAC,UAA1B;AAAqC,MAAA,QAAQ,EAAE,KAAKG,cAApD;AAAoE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWH,QAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CADJ,CAFJ;AAgBH;;AAjE6C;AAA7BX,K,CASViC,W,GAAcpC,U","sourcesContent":["import React from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport TokenService from '../../services/TokenService';\r\nimport ApiContext from '../../apiContext/ApiContext';\r\nimport UserService from '../../services/UserService';\r\nimport { tsImportEqualsDeclaration } from '@babel/types';\r\n\r\nexport default class LogIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mobile_number: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    static contextType = ApiContext;\r\n\r\n    componentDidMount(){\r\n        if(UserService.getId() !== this.props.match.params.id){\r\n            \r\n        }\r\n    }\r\n\r\n    handleNumber = (e)=>{\r\n        this.setState({mobile_number: e.target.value})\r\n    }\r\n\r\n    handlePassword = (e)=>{\r\n        this.setState({ password: e.target.value})\r\n    }\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        const {mobile_number, password} = this.state;\r\n\r\n        AuthService.postLogin(mobile_number, password).then( resData => {\r\n            console.log(resData)\r\n            if(resData.verified){\r\n                TokenService.saveAuthToken(resData.authToken);\r\n                UserService.saveId(resData.id)\r\n                this.props.history.push(`/user/${resData.id}`)\r\n            } else{\r\n                this.props.history.push(`api/resend?id=${resData.id}`)\r\n            }\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    handleUser = (e)=>{\r\n        e.preventDefault();\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            \r\n            <form onSubmit={this.handleSubmit}>\r\n                <fieldset>\r\n                    <header>Log In</header>\r\n                    <label htmlFor=\"user_name\">Mobile Number:</label>\r\n                    <input type=\"text\" id=\"user_name\" onChange={this.handleNumber} value={this.state.mobile_number}></input>\r\n\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input id=\"password\" type=\"password\" onChange={this.handlePassword} value={this.state.password}></input>\r\n\r\n                    <button type=\"submit\">Log In</button>\r\n                </fieldset>\r\n            </form>\r\n            \r\n        )\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}