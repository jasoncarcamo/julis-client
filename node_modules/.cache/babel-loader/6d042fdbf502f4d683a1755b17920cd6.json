{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\GitHub\\\\clean-com\\\\src\\\\components\\\\user\\\\User.js\";\nimport React from 'react';\nimport ApiContext from '../../apiContext/ApiContext';\nimport UserService from '../../services/UserService';\nimport RequestService from './request-service/RequestService';\nimport TokenService from '../../services/TokenService';\nimport { Route, Link } from 'react-router-dom';\nimport ServiceHistory from './service-history/ServiceHistory';\nexport default class User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first_name: 'oknfiwe',\n      last_name: '',\n      best_days_reach: '',\n      best_time_reach: '',\n      email: '',\n      home_number: '',\n      mobile_number: '',\n      date_created: '',\n      date_modified: '',\n      address: '',\n      city: '',\n      state_region: '',\n      zipcode: '',\n      message: '',\n      verified: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.id === UserService.getId()) {\n      fetch(\"http://localhost:8000/user/\".concat(UserService.getId())).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()).then(resData => {\n        this.setState({\n          first_name: resData.first_name,\n          last_name: resData.last_name,\n          email: resData.email,\n          home_number: resData.home_number,\n          mobile_number: resData.mobile_number,\n          date_created: resData.date_created,\n          date_modified: resData.date_modified,\n          address: resData.address,\n          city: resData.city,\n          state_region: resData.state_region,\n          zipcode: resData.zipcode,\n          verified: resData.verified\n        });\n      });\n    } else {\n      UserService.clearId();\n      TokenService.clearAuthToken();\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: servicesLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Service details\"), React.createElement(Link, {\n      to: requestServiceLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Arrange Clean Up\"), React.createElement(Route, {\n      exact: true,\n      path: servicesLink,\n      render: ServiceHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Hello \", this.state.first_name), React.createElement(Route, {\n      exact: true,\n      path: requestServiceLink,\n      render: props => React.createElement(RequestService, Object.assign({}, props, {\n        user: UserService.getId(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\nUser.context = ApiContext;","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\components\\user\\User.js"],"names":["React","ApiContext","UserService","RequestService","TokenService","Route","Link","ServiceHistory","User","Component","constructor","props","state","first_name","last_name","best_days_reach","best_time_reach","email","home_number","mobile_number","date_created","date_modified","address","city","state_region","zipcode","message","verified","componentDidMount","match","params","id","getId","fetch","then","res","ok","json","e","Promise","reject","resData","setState","clearId","clearAuthToken","history","push","render","servicesLink","requestServiceLink","context"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ApiContext from '../../apiContext/ApiContext';\r\nimport UserService from '../../services/UserService';\r\nimport RequestService from './request-service/RequestService';\r\nimport TokenService from '../../services/TokenService';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport ServiceHistory from './service-history/ServiceHistory';\r\n\r\nexport default class User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            first_name: 'oknfiwe', \r\n            last_name: '', \r\n            best_days_reach: '',\r\n            best_time_reach: '',\r\n            email: '', \r\n            home_number: '',\r\n            mobile_number: '',\r\n            date_created: '',\r\n            date_modified: '',\r\n            address: '',\r\n            city: '',\r\n            state_region: '',\r\n            zipcode: '',\r\n            message: '',\r\n            verified: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        if(this.props.match.params.id === UserService.getId()){\r\n            \r\n            fetch(`http://localhost:8000/user/${UserService.getId()}`)\r\n                .then( res => (!res.ok) ? res.json().then(e => Promise.reject(e)): res.json())\r\n                    .then( resData => {\r\n                        \r\n                        this.setState({\r\n\r\n                            first_name: resData.first_name,\r\n                            last_name: resData.last_name,\r\n                            email: resData.email, \r\n                            home_number: resData.home_number,\r\n                            mobile_number: resData.mobile_number,\r\n                            date_created: resData.date_created,\r\n                            date_modified: resData.date_modified,\r\n                            address: resData.address,\r\n                            city: resData.city,\r\n                            state_region: resData.state_region,\r\n                            zipcode: resData.zipcode,\r\n                            verified: resData.verified                            \r\n                        })\r\n                    \r\n                    });\r\n        } else{\r\n            UserService.clearId();\r\n            TokenService.clearAuthToken();\r\n            this.props.history.push('/login')\r\n        }\r\n    }\r\n\r\n    static context = ApiContext;\r\n\r\n    \r\n    render(){\r\n        return (\r\n            <section>\r\n                <Link to={servicesLink}>Service details</Link>\r\n                <Link to={requestServiceLink}>Arrange Clean Up</Link>\r\n\r\n                <Route exact path={servicesLink} render={ServiceHistory}></Route>\r\n                <h2>Hello {this.state.first_name}</h2>\r\n                <Route exact path={requestServiceLink} render={props => <RequestService {...props} user={UserService.getId()}></RequestService> }></Route>\r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}