{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\GitHub\\\\clean-com\\\\src\\\\components\\\\verify\\\\ResendVerificaton.js\";\nimport React from 'react';\nimport AuthService from '../../services/AuthService';\nimport queryString from 'query-string';\nexport default class ResendVerification extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNumber = e => {\n      this.setState({\n        mobile_number: e.target.value\n      });\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.send = e => {\n      e.preventDefault();\n      return fetch(\"http://localhost:8000/api/verify?\");\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      AuthService.postLogin(this.state.mobile_number, this.state.password).then(res => {\n        this.setState({\n          email: res.email\n        });\n\n        if (res) {\n          fetch(\"http://localhost:8000/api/verify?token=\".concat(res.authToken, \"&id=\").concat(res.id), {\n            method: 'POST',\n            headers: {\n              'content-type': 'application/json',\n              'authorization': \"bearer \".concat(res.authToken)\n            },\n            body: JSON.stringify({\n              email: res.email\n            })\n          });\n          this.setState({\n            sent: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      mobile_number: '',\n      password: '',\n      email: '',\n      sent: false,\n      error: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = queryString.parse(this.props.location.search);\n    console.log(id === {});\n\n    if (id) {} else {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.sent ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Confirmation sent to email: \", this.state.email) : React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Your email has not been verified yet. Please type in your log in information\"), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ver_email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Mobile Number:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"ver_email\",\n      onChange: this.handleNumber,\n      value: this.state.mobile_number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"ver_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"ver_pass\",\n      onChange: this.handlePassword,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\components\\verify\\ResendVerificaton.js"],"names":["React","AuthService","queryString","ResendVerification","Component","constructor","props","handleNumber","e","setState","mobile_number","target","value","handlePassword","password","send","preventDefault","fetch","handleSubmit","postLogin","state","then","res","email","authToken","id","method","headers","body","JSON","stringify","sent","error","componentDidMount","parse","location","search","console","log","history","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport queryString from 'query-string';\r\n\r\n\r\nexport default class ResendVerification extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mobile_number: '',\r\n            password: '',\r\n            email: '',\r\n            sent: false,\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = queryString.parse(this.props.location.search)\r\n        console.log(id === {})\r\n        if(id){\r\n\r\n        } else{\r\n            this.props.history.push('/');\r\n\r\n        }\r\n    }\r\n\r\n    handleNumber = (e)=>{\r\n        this.setState({mobile_number: e.target.value})\r\n    }\r\n\r\n    handlePassword = (e)=>{\r\n        this.setState({ password: e.target.value})\r\n    }\r\n\r\n    send = (e)=>{\r\n        e.preventDefault();\r\n        return fetch(`http://localhost:8000/api/verify?`)\r\n    }\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        AuthService.postLogin(this.state.mobile_number, this.state.password)\r\n            .then( res=> {\r\n    \r\n                this.setState({ email: res.email})\r\n\r\n                if(res){\r\n                fetch(`http://localhost:8000/api/verify?token=${res.authToken}&id=${res.id}`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'content-type': 'application/json',\r\n                        'authorization': `bearer ${res.authToken}`\r\n                    },\r\n                    body: JSON.stringify({email: res.email})\r\n                })\r\n                    this.setState({ sent: true})\r\n                        \r\n                } \r\n             });\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <section>\r\n                {this.state.sent ? <h3>Confirmation sent to email: {this.state.email}</h3> : <form onSubmit={this.handleSubmit}>\r\n                    <header>Your email has not been verified yet. Please type in your log in information</header>\r\n                    <fieldset>\r\n                        <label htmlFor=\"ver_email\">Mobile Number:</label>\r\n                        <input type=\"text\" id=\"ver_email\" onChange={this.handleNumber} value={this.state.mobile_number}></input>\r\n                        <label htmlFor=\"ver_password\">Password:</label>\r\n                        <input type=\"password\" id=\"ver_pass\" onChange={this.handlePassword} value={this.state.password}></input>\r\n                        <button type=\"submit\"></button>\r\n                    </fieldset>\r\n                </form>}\r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}