{"ast":null,"code":"import React from 'react';\nimport tokenService from '../../../services/TokenService';\nimport queryString from 'query-string';\nexport default class EditService extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      fetch(\"http://localhost:8000/user/service\", {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n    };\n\n    this.state = {\n      service_type: '',\n      comments: '',\n      day: '',\n      best_time_reached: '',\n      date_created: '',\n      price: ''\n    };\n  }\n\n  componentWillMount() {\n    const serviceId = queryString.parse(this.props.location.search);\n    console.log(serviceId);\n    fetch(\"http://localhost:8000/user/service\", {\n      headers: {\n        'content-type': 'application/json',\n        'authorization': \"bearer \".concat(tokenService.getAuthToken())\n      }\n    }).then(res => res.json()).then(resData => {\n      const currentService = resData.services.filter(service => service.id == serviceId.id)[0];\n      this.setState({\n        serivce_type: currentService.serivce_type,\n        comments: currentService.comments,\n        day: currentService.day,\n        best_time_reached: currentService.best_time_reached,\n        price: currentService.price\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return 'Hello';\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\components\\user\\edit-service\\EditService.js"],"names":["React","tokenService","queryString","EditService","Component","constructor","props","handleSubmit","e","preventDefault","fetch","method","headers","state","service_type","comments","day","best_time_reached","date_created","price","componentWillMount","serviceId","parse","location","search","console","log","getAuthToken","then","res","json","resData","currentService","services","filter","service","id","setState","serivce_type","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAGA,eAAe,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA8BlBC,YA9BkB,GA8BFC,CAAD,IAAK;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,KAAK,uCAAuC;AACxCC,QAAAA,MAAM,EAAE,OADgC;AAExCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAF+B,OAAvC,CAAL;AAMH,KAtCiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,GAAG,EAAE,EAHI;AAITC,MAAAA,iBAAiB,EAAE,EAJV;AAKTC,MAAAA,YAAY,EAAE,EALL;AAMTC,MAAAA,KAAK,EAAE;AANE,KAAb;AAQH;;AACDC,EAAAA,kBAAkB,GAAE;AAChB,UAAMC,SAAS,GAAGnB,WAAW,CAACoB,KAAZ,CAAkB,KAAKhB,KAAL,CAAWiB,QAAX,CAAoBC,MAAtC,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACAX,IAAAA,KAAK,uCAAuC;AACxCE,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,0CAA2BX,YAAY,CAAC0B,YAAb,EAA3B;AAFK;AAD+B,KAAvC,CAAL,CAMCC,IAND,CAMOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANd,EAOCF,IAPD,CAOMG,OAAO,IAAI;AAEb,YAAMC,cAAc,GAAGD,OAAO,CAACE,QAAR,CAAiBC,MAAjB,CAAyBC,OAAO,IAAIA,OAAO,CAACC,EAAR,IAAcf,SAAS,CAACe,EAA5D,EAAgE,CAAhE,CAAvB;AAEA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEN,cAAc,CAACM,YAA/B;AAA6CvB,QAAAA,QAAQ,EAAEiB,cAAc,CAACjB,QAAtE;AAAgFC,QAAAA,GAAG,EAAEgB,cAAc,CAAChB,GAApG;AAAyGC,QAAAA,iBAAiB,EAAEe,cAAc,CAACf,iBAA3I;AAA8JE,QAAAA,KAAK,EAAEa,cAAc,CAACb;AAApL,OAAd;AAEH,KAbD;AAcH;;AAYDoB,EAAAA,MAAM,GAAE;AACJd,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACA,WACI,OADJ;AAGH;;AA9CmD","sourcesContent":["import React from 'react';\r\nimport tokenService from '../../../services/TokenService';\r\nimport queryString from 'query-string';\r\n\r\n\r\nexport default class EditService extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            service_type: '',\r\n            comments: '',\r\n            day: '',\r\n            best_time_reached: '',\r\n            date_created: '',\r\n            price: ''\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        const serviceId = queryString.parse(this.props.location.search);\r\n        console.log(serviceId)\r\n        fetch(`http://localhost:8000/user/service`, {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `bearer ${tokenService.getAuthToken()}`\r\n            }\r\n        })\r\n        .then( res => res.json())\r\n        .then(resData => {\r\n\r\n            const currentService = resData.services.filter( service => service.id == serviceId.id)[0]\r\n            \r\n            this.setState({ serivce_type: currentService.serivce_type, comments: currentService.comments, day: currentService.day, best_time_reached: currentService.best_time_reached, price: currentService.price\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        fetch(`http://localhost:8000/user/service`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state)\r\n        return (\r\n            'Hello'\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}