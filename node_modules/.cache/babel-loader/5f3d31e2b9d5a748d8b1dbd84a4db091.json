{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\GitHub\\\\clean-com\\\\src\\\\components\\\\user\\\\request-service\\\\RequestService.js\";\nimport React from 'react';\nimport TokenService from '../../../services/TokenService';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nexport default class RequestService extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleService = e => {\n      let newPrice;\n\n      if (e.target.checked) {\n        newPrice = parseFloat(this.state.price) + parseFloat(e.target.value);\n        this.setState({\n          price: newPrice\n        });\n      } else {\n        newPrice = parseFloat(this.state.price) - parseFloat(e.target.value);\n      }\n\n      this.setState({\n        price: newPrice\n      });\n    };\n\n    this.handleDay = e => {\n      this.setState({\n        day: e.target.value\n      });\n    };\n\n    this.handleBestTime = e => {\n      this.setState({\n        best_time_reached: e.target.value\n      });\n    };\n\n    this.handleComments = e => {\n      this.setState({\n        comments: e.target.value\n      });\n    };\n\n    this.handlePrice = e => {\n      this.setState({\n        price: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      fetch(\"http://localhost:8000/user/service\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': \"bearer \".concat(TokenService.getAuthToken())\n        },\n        body: JSON.stringify({\n          service_type: this.state.service_type,\n          comments: this.state.comments,\n          day: this.state.day,\n          best_time_reached: this.state.best_time_reached,\n          price: this.state.price,\n          user_id: this.props.user,\n          date_modified: new Date()\n        })\n      }).then(res => res.json()).then(resData => this.props.history.push('/user/services'));\n    };\n\n    this.state = {\n      services: [{\n        name: 'Windows',\n        price: '20.00'\n      }, {\n        name: 'Refridgerator',\n        price: '20.00'\n      }, {\n        name: 'Walls',\n        price: '30.00'\n      }],\n      date: '',\n      service_type: '',\n      day: '',\n      best_time_reached: '',\n      comments: '',\n      price: '0.00'\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"time-picker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Make a request\"), React.createElement(DatePicker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"req_days\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"When?\"), React.createElement(\"select\", {\n      id: \"req_days\",\n      onChange: this.handleDay,\n      value: this.state.day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.days.map(day => React.createElement(\"option\", {\n      key: day.day,\n      value: day.day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, day.day))), React.createElement(\"label\", {\n      htmlFor: \"req_time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"What time?\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"req_time\",\n      onChange: this.handleBestTime,\n      value: this.state.best_time_reached,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"req_comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Comments?\"), React.createElement(\"textarea\", {\n      id: \"req_comments\",\n      onChange: this.handleComments,\n      value: this.state.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"$\", this.state.price), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Go\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\components\\user\\request-service\\RequestService.js"],"names":["React","TokenService","DatePicker","RequestService","Component","constructor","props","handleService","e","newPrice","target","checked","parseFloat","state","price","value","setState","handleDay","day","handleBestTime","best_time_reached","handleComments","comments","handlePrice","handleSubmit","preventDefault","fetch","method","headers","getAuthToken","body","JSON","stringify","service_type","user_id","user","date_modified","Date","then","res","json","resData","history","push","services","name","date","render","days","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TokenService from '../../../services/TokenService';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport default class RequestService extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            services: [\r\n                {\r\n                    name: 'Windows',\r\n                    price: '20.00'\r\n                },\r\n                {\r\n                    name: 'Refridgerator',\r\n                    price: '20.00'\r\n                },\r\n                {\r\n                    name: 'Walls',\r\n                    price: '30.00'\r\n                }\r\n            ],\r\n            date: '',\r\n            service_type: '',\r\n            day: '',\r\n            best_time_reached: '',\r\n            comments: '',\r\n            price: '0.00'\r\n        }\r\n    }\r\n\r\n    handleService= (e)=>{\r\n        \r\n        let newPrice;\r\n        if(e.target.checked){\r\n            newPrice = parseFloat(this.state.price) + parseFloat(e.target.value)\r\n            this.setState({price: newPrice})\r\n        } else{\r\n            newPrice = parseFloat(this.state.price) - parseFloat(e.target.value)\r\n        }\r\n        this.setState({ price: newPrice})\r\n    }\r\n\r\n    handleDay = (e)=>{\r\n        this.setState({day: e.target.value});        \r\n    }\r\n\r\n    handleBestTime = (e)=>{\r\n        this.setState({best_time_reached: e.target.value});\r\n    }\r\n\r\n    handleComments = (e)=>{\r\n        this.setState({comments: e.target.value});\r\n    }\r\n\r\n    handlePrice = (e)=>{\r\n        this.setState({price: e.target.value});\r\n    }\r\n\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        fetch(`http://localhost:8000/user/service`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `bearer ${TokenService.getAuthToken()}`\r\n            },\r\n            body: JSON.stringify({service_type: this.state.service_type, comments: this.state.comments, day: this.state.day, best_time_reached: this.state.best_time_reached, price: this.state.price, user_id: this.props.user, date_modified: new Date()})\r\n        })\r\n        .then( res => res.json())\r\n        .then(resData => this.props.history.push('/user/services'));\r\n    }\r\n\r\n    \r\n    render(){\r\n        \r\n        return (\r\n            <section>\r\n                \r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"time-picker\"></div>\r\n                    <fieldset>\r\n                        <header>Make a request</header>\r\n                        \r\n                        <DatePicker/>\r\n\r\n                        <label htmlFor=\"req_days\">When?</label>\r\n                        <select id=\"req_days\" onChange={this.handleDay} value={this.state.day}>\r\n                            {this.state.days.map( day => (<option key={day.day} value={day.day}>{day.day}</option>))}\r\n                        </select>\r\n\r\n                        <label htmlFor=\"req_time\">What time?</label>\r\n                        <input type=\"text\" id=\"req_time\" onChange={this.handleBestTime} value={this.state.best_time_reached}></input>\r\n\r\n                        <label htmlFor=\"req_comments\">Comments?</label>\r\n                        <textarea id=\"req_comments\" onChange={this.handleComments} value={this.state.comments}></textarea>\r\n\r\n                        <span>${this.state.price}</span> \r\n\r\n                        <button type=\"submit\">Go</button>\r\n                    </fieldset>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}