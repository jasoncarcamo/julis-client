{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\GitHub\\\\clean-com\\\\src\\\\components\\\\user\\\\service-history\\\\ServiceHistory.js\";\nimport React from 'react';\nimport TokenService from '../../../services/TokenService';\nimport { format as formatDate, getTime } from 'date-fns';\nimport { Route, Link } from 'react-router-dom';\nimport EditService from '../edit-service/EditService';\nexport default class ServiceHistory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCancelService = e => {\n      e.preventDefault();\n      fetch(\"http://localhost:8000/user/service\", {\n        method: 'DELETE',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': \"bearer \".concat(TokenService.getAuthToken())\n        },\n        body: JSON.stringify({\n          id: e.target.id\n        })\n      });\n      this.props.refresh();\n    };\n\n    this.click = e => {\n      e.target.checked;\n      console.log(e.target.checked);\n    };\n\n    this.state = {\n      services: [],\n      service_type: '',\n      comments: '',\n      day: '',\n      best_time_reached: '',\n      date_created: '',\n      price: ''\n    };\n  }\n\n  componentWillMount() {\n    fetch('http://localhost:8000/user/service', {\n      headers: {\n        'authorization': \"bearer \".concat(TokenService.getAuthToken())\n      }\n    }).then(res => res.json()).then(resData => this.setState({\n      services: resData.services\n    }));\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8000/user/service', {\n      headers: {\n        'authorization': \"bearer \".concat(TokenService.getAuthToken())\n      }\n    }).then(res => res.json()).then(resData => this.setState({\n      services: resData.services\n    }));\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.services.map(service => React.createElement(\"li\", {\n      key: service.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      onClick: this.click,\n      className: \"hi\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, formatDate(getTime(service.date_modified), 'MMM Do YYYY hh:mm:ss A ZZ ')), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, service.comments), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleCancelService,\n      id: service.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Link, {\n      to: \"/user/editservice?id=\".concat(service.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Edit\")))), React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"true\",\n      onChange: this.click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\clean-com\\src\\components\\user\\service-history\\ServiceHistory.js"],"names":["React","TokenService","format","formatDate","getTime","Route","Link","EditService","ServiceHistory","Component","constructor","props","handleCancelService","e","preventDefault","fetch","method","headers","getAuthToken","body","JSON","stringify","id","target","refresh","click","checked","console","log","state","services","service_type","comments","day","best_time_reached","date_created","price","componentWillMount","then","res","json","resData","setState","componentDidMount","render","map","service","date_modified"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TokenService from '../../../services/TokenService';\r\nimport {format as formatDate, getTime} from 'date-fns'\r\nimport {Route, Link} from 'react-router-dom';\r\nimport EditService from '../edit-service/EditService';\r\n\r\nexport default class ServiceHistory extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            services: [],\r\n            service_type: '',\r\n            comments: '',\r\n            day: '',\r\n            best_time_reached: '',\r\n            date_created: '',\r\n            price: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        \r\n        fetch('http://localhost:8000/user/service', {            \r\n            headers: {\r\n                'authorization': `bearer ${TokenService.getAuthToken()}`\r\n            }\r\n        })\r\n            .then( res => res.json())\r\n            .then( resData => this.setState({services: resData.services}));\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        \r\n        fetch('http://localhost:8000/user/service', {            \r\n            headers: {\r\n                'authorization': `bearer ${TokenService.getAuthToken()}`\r\n            }\r\n        })\r\n            .then( res => res.json())\r\n            .then( resData => this.setState({services: resData.services}));\r\n    }\r\n\r\n\r\n    handleCancelService = (e)=>{\r\n        e.preventDefault()\r\n        fetch(`http://localhost:8000/user/service`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `bearer ${TokenService.getAuthToken()}`\r\n            },\r\n            body: JSON.stringify({id: e.target.id})\r\n\r\n        })\r\n\r\n        this.props.refresh();\r\n    }\r\n\r\n    click = (e)=>{\r\n        e.target.checked\r\n        console.log(e.target.checked)\r\n    }\r\n   \r\n    render(){\r\n        \r\n        return(\r\n            <section>\r\n                <ul>\r\n                    {this.state.services.map( service => (<li key={service.id}><header onClick={this.click} className=\"hi\">{formatDate(getTime(service.date_modified), 'MMM Do YYYY hh:mm:ss A ZZ ')}</header><p>{service.comments}</p><button type=\"button\" onClick={this.handleCancelService} id={service.id}>Cancel</button><Link to={`/user/editservice?id=${service.id}`}>Edit</Link></li>))}\r\n                </ul>\r\n                <input type=\"checkbox\" checked='true' onChange={this.click}></input>\r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}