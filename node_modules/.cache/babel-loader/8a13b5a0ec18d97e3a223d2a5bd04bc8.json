{"ast":null,"code":"const AuthService = {\n  postLogin(mobile_number, password) {\n    return fetch('https://fathomless-eyrie-65525.herokuapp.com/api/login', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        mobile_number,\n        password\n      })\n    }).then(res => {\n      return !res.ok ? res.json().then(e => {\n        Promise.reject(e);\n      }) : res.json();\n    });\n  },\n\n  registerUser({\n    first_name,\n    last_name,\n    email,\n    password,\n    home_number,\n    mobile_number,\n    address,\n    city,\n    state_region,\n    zipcode,\n    id\n  }) {\n    return fetch('https://fathomless-eyrie-65525.herokuapp.com/api/register', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        first_name,\n        last_name,\n        email,\n        password,\n        home_number,\n        mobile_number,\n        address,\n        city,\n        state_region,\n        zipcode,\n        id\n      })\n    }).then(res => {\n      if (!res.ok) {\n        return res.json().then(e => Promise.reject(e));\n      }\n\n      return res.json();\n    });\n  }\n\n};\nmodule.exports = AuthService;","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\julis-cleaning\\src\\services\\AuthService.js"],"names":["AuthService","postLogin","mobile_number","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","registerUser","first_name","last_name","email","home_number","address","city","state_region","zipcode","id","module","exports"],"mappings":"AACA,MAAMA,WAAW,GAAG;AAChBC,EAAAA,SAAS,CAACC,aAAD,EAAgBC,QAAhB,EAAyB;AAC9B,WAAOC,KAAK,CAAC,wDAAD,EAA2D;AACnEC,MAAAA,MAAM,EAAE,MAD2D;AAEnEC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF0D;AAKnEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,QAAAA,aAAD;AAAgBC,QAAAA;AAAhB,OAAf;AAL6D,KAA3D,CAAL,CAONO,IAPM,CAOAC,GAAG,IAAI;AACV,aAAO,CAACA,GAAG,CAACC,EAAL,GAAUD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAI;AAClCC,QAAAA,OAAO,CAACC,MAAR,CAAeF,CAAf;AAAkB,OADL,CAAV,GACmBH,GAAG,CAACE,IAAJ,EAD1B;AAEH,KAVM,CAAP;AAWH,GAbe;;AAchBI,EAAAA,YAAY,CAAC;AAACC,IAAAA,UAAD;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,KAAxB;AAA+BjB,IAAAA,QAA/B;AAAyCkB,IAAAA,WAAzC;AAAuDnB,IAAAA,aAAvD;AAAsEoB,IAAAA,OAAtE;AAA+EC,IAAAA,IAA/E;AAAqFC,IAAAA,YAArF;AAAmGC,IAAAA,OAAnG;AAA4GC,IAAAA;AAA5G,GAAD,EAAiH;AACzH,WAAOtB,KAAK,CAAC,2DAAD,EAA8D;AACtEC,MAAAA,MAAM,EAAE,MAD8D;AAEtEC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF6D;AAKtEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACS,QAAAA,UAAD;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,KAAxB;AAA+BjB,QAAAA,QAA/B;AAAyCkB,QAAAA,WAAzC;AAAuDnB,QAAAA,aAAvD;AAAsEoB,QAAAA,OAAtE;AAA+EC,QAAAA,IAA/E;AAAqFC,QAAAA,YAArF;AAAmGC,QAAAA,OAAnG;AAA4GC,QAAAA;AAA5G,OAAf;AALgE,KAA9D,CAAL,CAONhB,IAPM,CAOAC,GAAG,IAAI;AACV,UAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACP,eAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAArB,CAAP;AACH;;AACD,aAAOH,GAAG,CAACE,IAAJ,EAAP;AACH,KAZM,CAAP;AAaH;;AA5Be,CAApB;AAkCAc,MAAM,CAACC,OAAP,GAAiB5B,WAAjB","sourcesContent":["\r\nconst AuthService = {\r\n    postLogin(mobile_number, password){\r\n        return fetch('https://fathomless-eyrie-65525.herokuapp.com/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify({mobile_number, password})\r\n        })\r\n        .then( res => {\r\n            return !res.ok ? res.json().then(e => {\r\n                Promise.reject(e)}) : res.json()\r\n        })\r\n    },\r\n    registerUser({first_name, last_name, email, password, home_number,  mobile_number, address, city, state_region, zipcode, id}){\r\n        return fetch('https://fathomless-eyrie-65525.herokuapp.com/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({first_name, last_name, email, password, home_number,  mobile_number, address, city, state_region, zipcode, id})\r\n        })\r\n        .then( res => {\r\n            if(!res.ok){\r\n                return res.json().then(e => Promise.reject(e))\r\n            }\r\n            return res.json();\r\n        })\r\n    }\r\n,\r\n}\r\n\r\n\r\n\r\nmodule.exports = AuthService;"]},"metadata":{},"sourceType":"module"}