{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\Github\\\\julis-cleaning\\\\src\\\\components\\\\verify\\\\ResendVerificaton.js\";\nimport React from 'react';\nimport AuthService from '../../services/AuthService';\nimport queryString from 'query-string';\nimport './resendverification.css';\nexport default class ResendVerification extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNumber = e => {\n      this.setState({\n        mobile_number: e.target.val7ue\n      });\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      AuthService.postLogin(this.state.mobile_number, this.state.password).then(res => {\n        this.setState({\n          email: res.email\n        });\n\n        if (res) {\n          fetch(\"https://fathomless-eyrie-65525.herokuapp.com/api/verify?token=\".concat(res.authToken, \"&id=\").concat(res.id), {\n            method: 'POST',\n            headers: {\n              'content-type': 'application/json',\n              'authorization': \"bearer \".concat(res.authToken)\n            },\n            body: JSON.stringify({\n              email: res.email\n            })\n          });\n          this.setState({\n            sent: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      mobile_number: '',\n      password: '',\n      email: '',\n      sent: false,\n      error: ''\n    };\n  }\n\n  componentDidMount() {\n    const auth = queryString.parse(this.props.location.search);\n    fetch(\"https://fathomless-eyrie-65525.herokuapp.com/user\", {\n      headers: {\n        'authorization': \"bearer \".concat(auth.token)\n      }\n    }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json()).then(resData => {\n      if (resData.error) {\n        this.props.history.push('/register');\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"resend_ver_section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.sent ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Confirmation sent to email: \", this.state.email) : React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      id: \"resend_ver_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Your email has not been verified yet. Please type in your log in information\"), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ver_email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Mobile Number:\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"ver_email\",\n      onChange: this.handleNumber,\n      value: this.state.mobile_number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"ver_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"ver_pass\",\n      onChange: this.handlePassword,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"resend_ver_submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"send verification\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\Github\\julis-cleaning\\src\\components\\verify\\ResendVerificaton.js"],"names":["React","AuthService","queryString","ResendVerification","Component","constructor","props","handleNumber","e","setState","mobile_number","target","val7ue","handlePassword","password","value","handleSubmit","preventDefault","postLogin","state","then","res","email","fetch","authToken","id","method","headers","body","JSON","stringify","sent","error","componentDidMount","auth","parse","location","search","token","ok","json","Promise","reject","resData","history","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport queryString from 'query-string';\r\nimport './resendverification.css';\r\n\r\n\r\nexport default class ResendVerification extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            mobile_number: '',\r\n            password: '',\r\n            email: '',\r\n            sent: false,\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const auth = queryString.parse(this.props.location.search);\r\n        \r\n        fetch(`https://fathomless-eyrie-65525.herokuapp.com/user`, {\r\n            headers: {\r\n                'authorization': `bearer ${auth.token}`\r\n            }\r\n        })\r\n            .then( res => (!res.ok) ? res.json().then(e => Promise.reject(e)) : res.json())\r\n            .then(resData => {\r\n                if(resData.error){\r\n                    this.props.history.push('/register')\r\n                }\r\n            })\r\n    }\r\n\r\n    handleNumber = (e)=>{\r\n        this.setState({mobile_number: e.target.val7ue})\r\n    }\r\n\r\n    handlePassword = (e)=>{\r\n        this.setState({ password: e.target.value})\r\n    }\r\n\r\n    \r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        AuthService.postLogin(this.state.mobile_number, this.state.password)\r\n            .then( res=> {\r\n    \r\n                this.setState({ email: res.email})\r\n\r\n                if(res){\r\n                fetch(`https://fathomless-eyrie-65525.herokuapp.com/api/verify?token=${res.authToken}&id=${res.id}`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'content-type': 'application/json',\r\n                        'authorization': `bearer ${res.authToken}`\r\n                    },\r\n                    body: JSON.stringify({email: res.email})\r\n                })\r\n                    this.setState({ sent: true})\r\n                        \r\n                } \r\n             });\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <section id=\"resend_ver_section\">\r\n                {this.state.sent ? <h2>Confirmation sent to email: {this.state.email}</h2> : <form onSubmit={this.handleSubmit} id=\"resend_ver_form\">\r\n                    <header>Your email has not been verified yet. Please type in your log in information</header>\r\n                    <fieldset>\r\n                        <label htmlFor=\"ver_email\">Mobile Number:</label>\r\n                        <input type=\"text\" id=\"ver_email\" onChange={this.handleNumber} value={this.state.mobile_number}></input>\r\n                        <label htmlFor=\"ver_password\">Password:</label>\r\n                        <input type=\"password\" id=\"ver_pass\" onChange={this.handlePassword} value={this.state.password}></input>\r\n                        <button type=\"submit\" id=\"resend_ver_submit\">send verification</button>\r\n                    </fieldset>\r\n                </form>}\r\n            </section>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}