{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\Documents\\\\GitHub\\\\julis-cleaning\\\\src\\\\components\\\\user\\\\service-history\\\\ServiceList.js\";\nimport React from 'react';\nimport { format as formatDate, getTime } from 'date-fns';\nimport { Link } from 'react-router-dom';\nexport default class ServiceList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirm: false\n    };\n  }\n\n  render() {\n    const service = this.props.service;\n    return React.createElement(\"li\", {\n      key: service.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Date set for \", formatDate(getTime(service.best_time_reached), 'MMM Do YYYY '), service.best_time_reached), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Service type: \", React.createElement(\"span\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, service.day)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Comments: \", React.createElement(\"span\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, service.comments)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/user/editservice?id=\".concat(service.id),\n      className: \"edit_button\",\n      id: service.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Edit\"), this.state.confirm ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.props.handleCancelService,\n      className: service.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"confirm\"), React.createElement(\"button\", {\n      className: \"cancel_confirm\",\n      onClick: () => this.setState({\n        confirm: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Cancel\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"cancel_confirm\",\n      onClick: () => this.setState({\n        confirm: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Cancel clean up\"))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\jason\\OneDrive\\Documents\\GitHub\\julis-cleaning\\src\\components\\user\\service-history\\ServiceList.js"],"names":["React","format","formatDate","getTime","Link","ServiceList","Component","constructor","props","state","confirm","render","service","id","color","best_time_reached","day","comments","handleCancelService","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAM,IAAIC,UAAlB,EAA8BC,OAA9B,QAA4C,UAA5C;AACA,SAAQC,IAAR,QAAoB,kBAApB;AAGA,eAAe,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,OAAO,EAAE;AADD,KAAZ;AAGH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,OAAO,GAAG,KAAKJ,KAAL,CAAWI,OAA3B;AACA,WACQ;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA+CZ,UAAU,CAACC,OAAO,CAACS,OAAO,CAACG,iBAAT,CAAR,EAAqC,cAArC,CAAzD,EAA+GH,OAAO,CAACG,iBAAvH,CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiB;AAAM,MAAA,KAAK,EAAE;AAACD,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCF,OAAO,CAACI,GAAxC,CAAjB,CAJJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAa;AAAM,MAAA,KAAK,EAAE;AAACF,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCF,OAAO,CAACK,QAAxC,CAAb,CANJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,iCAA0BL,OAAO,CAACC,EAAlC,CAAR;AAAgD,MAAA,SAAS,EAAC,aAA1D;AAAwE,MAAA,EAAE,EAAED,OAAO,CAACC,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGK,KAAKJ,KAAL,CAAWC,OAAX,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWU,mBAA5B;AAAiD,MAAA,SAAS,EAAEN,OAAO,CAACC,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,MAAK,KAAKM,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADC,GAMD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAiD,MAAA,OAAO,EAAE,MAAM,KAAKS,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CATJ,CARJ,CADR;AAuBH;;AAlCmD","sourcesContent":["import React from 'react';\r\nimport {format as formatDate, getTime} from 'date-fns'\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\nexport default class ServiceList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            confirm: false\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const service = this.props.service;\r\n        return (\r\n                <li key={service.id}>\r\n                   \r\n                    <header style={{color: 'black'}}>Date set for {formatDate(getTime(service.best_time_reached), 'MMM Do YYYY ')}{service.best_time_reached}</header>\r\n\r\n                    <p>Service type: <span style={{color: 'black'}}>{service.day}</span></p>\r\n\r\n                    <p>Comments: <span style={{color: 'black'}}>{service.comments}</span></p>\r\n\r\n                    <div>\r\n                        <Link to={`/user/editservice?id=${service.id}`} className=\"edit_button\" id={service.id}>Edit</Link>  \r\n                        \r\n                        {this.state.confirm ? (\r\n                        <div>\r\n                            <button onClick={this.props.handleCancelService} className={service.id} >confirm</button> \r\n                            \r\n                            <button className=\"cancel_confirm\" onClick={()=> this.setState({confirm: false})}>Cancel</button>\r\n                        </div>) : (\r\n                        <div>\r\n                            <button type=\"button\" className=\"cancel_confirm\" onClick={() => this.setState({confirm: true})} >Cancel clean up</button>\r\n                        </div>)}     \r\n                    </div>\r\n                </li>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}